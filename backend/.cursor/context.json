{
  "arch": {
    "stack": ["FastAPI", "Next.js", "OpenAI Agents", "Scrapy"],
    "decisions": [
      {
        "what": "Batch processing for keyword categorization (75 keywords/batch)",
        "why": "ALL models (gpt-4o, gpt-4o-mini, gpt-5-mini) fail with JSON truncation at 200+ keywords in a single request. Batching splits large sets into manageable chunks.",
        "when": "2025-10-21"
      },
      {
        "what": "Include branded keywords in current SEO analysis",
        "why": "Frontend needs to show ALL keywords found in original content (including branded). Branded keywords are still excluded from optimization to avoid competing with brands.",
        "when": "2025-10-21"
      },
      {
        "what": "Batching for broad_volume_agent (100 items/batch)",
        "why": "Even with max_tokens=16000, LLM generates malformed JSON for 214 items (missing commas, truncation). Batching prevents JSON corruption like keyword_agent.",
        "when": "2025-10-22"
      },
      {
        "what": "Removed strict validation in SEO content analysis",
        "why": "Simple substring validation was rejecting keywords found by advanced matching (sub-phrase, plural/singular, hyphen variations). extract_keywords_from_content already validates.",
        "when": "2025-10-22"
      },
      {
        "what": "Filter 0-volume keywords in SEO analysis",
        "why": "Keywords with search_volume = 0 or None waste space in titles/bullets. Added if search_volume > 0 filter before categorization in prepare_keyword_data_for_analysis().",
        "when": "2025-10-22"
      },
      {
        "what": "Mandatory design-specific keywords in title (2-3 from highest volume root)",
        "why": "AI was ignoring design keywords. Strengthened prompts with MANDATORY markers, 3-step instructions, and 4 enforcement points across Title Optimization, Design Keywords section, and CRITICAL REQUIREMENTS.",
        "when": "2025-10-22"
      },
      {
        "what": "Deduplicate keywords across title, bullets, and backend (post-AI generation)",
        "why": "Keywords were appearing multiple times (e.g., in title + bullets + backend), wasting space. Added _deduplicate_keywords_across_content() with priority: Title > Bullets > Backend. Case-insensitive matching.",
        "when": "2025-10-22"
      },
      {
        "what": "Handle None values in search_volume for sorting and calculations",
        "why": "broad_volume_agent drops items when JSON parsing fails, leaving search_volume=None. This caused TypeError in keyword_validator sorting and root_relevance_agent calculations. Added 'or 0' to treat None as 0.",
        "when": "2025-10-22"
      },
      {
        "what": "Fix METHOD 2 keyword matching to require sequential order + tight proximity",
        "why": "METHOD 2 was matching scattered words (e.g., 'makeup sponges foundation' matched 'makeup sponge...sponges for foundation'). Changed to require: 1) exact sequential order, 2) max 20 chars between adjacent tokens, 3) no reverse/scattered matching.",
        "when": "2025-10-22"
      },
      {
        "what": "Fix brand extraction path in Task 7 AI agent (runner.py line 448)",
        "why": "Brand was extracted at line 279 (productOverview_feature_div > kv > Brand) but re-extracted incorrectly at line 448 (elements > brand > text - wrong path!). Changed to use already-extracted current_content['brand'].",
        "when": "2025-10-22"
      },
      {
        "what": "Fix keyword sorting to use VOLUME instead of RELEVANCY in amazon_compliance_agent.py",
        "why": "main_keyword_root and design_keyword_root were selected by max(relevancy_score), not max(search_volume). All 'Relevant' keywords have relevancy=10, so this was meaningless. Changed to sort by search_volume for maximum SEO impact.",
        "when": "2025-10-22"
      },
      {
        "what": "Add post-generation validation for brand and top keywords in amazon_compliance_agent.py",
        "why": "AI was ignoring brand and high-volume keyword requirements despite prompt instructions. Added validation after AI generation: 1) Reject if brand missing (when brand exists), 2) Reject if top 2 keywords missing, 3) Use fallback with brand if validation fails.",
        "when": "2025-10-22"
      },
      {
        "what": "Strengthen RULE 3 prompt to emphasize VOLUME IS KING in amazon_compliance_agent.py",
        "why": "AI was using low-volume keywords (e.g., 'makeup soft sponge' 32 vol) instead of high-volume ones ('beauty blender' 71K vol). Added explicit examples showing volume hierarchy and made keyword #1 (HIGHEST VOLUME) MANDATORY in title.",
        "when": "2025-10-22"
      },
      {
        "what": "ROOT FIX: Sort keywords by VOLUME (not relevancy) across ALL 7 allocation/sorting points",
        "why": "High-volume keywords were missing from titles because sorting used relevancy_score or keyword_value (relevancy√óvolume) instead of pure search_volume. User said 'i don't think you caught the root solution'. Fixed: 1) keyword_validator allocation, 2-3) relevant/design keyword sorting, 4-5) all_keywords_for_ai sorting (both paths), 6) stricter validation for #1 keyword, 7) improved fallback to use top volume keywords.",
        "when": "2025-10-22",
        "impact": "Guarantees highest-volume keywords appear first in allocation, AI input, validation, and fallback - solving Issue #3 at its root"
      },
      {
        "what": "Brand preservation via prompt (not Python regex) in amazon_compliance_agent.py",
        "why": "User wants EXACT brand form from current title (e.g., 'GWT' not 'Gold Water Trading', 'so coll' not 'So Coll'). Complex regex patterns would break on edge cases. Solution: Show AI the current_title in prompt with explicit instructions to preserve exact brand form at start of title.",
        "when": "2025-10-22",
        "impact": "AI naturally extracts brand form from context, handles all cases (abbreviations, lowercase, mixed case) without brittle parsing logic"
      },
      {
        "what": "Increased minimum character requirements: 155 chars for titles AND bullets",
        "why": "User requested minimum 155 characters (was 150 for titles, no minimum for bullets) to maximize Amazon listing space and keyword density. Updated: 1) All prompt instructions, 2) Validation checklists, 3) Python padding logic (break conditions), 4) Examples and guidelines.",
        "when": "2025-10-22",
        "impact": "Ensures every title and bullet uses full space for maximum SEO value and keyword coverage"
      }
    ]
  },
  "features": {
    "keyword_categorization": {
      "files": [
        "app/local_agents/keyword/runner.py",
        "app/local_agents/keyword/agent.py"
      ],
      "model": "gpt-4o-mini",
      "batch_size": 75,
      "max_tokens": 12000,
      "timeout": 240,
      "state": "active",
      "notes": "Batching enabled gpt-4o-mini (3x cheaper). 75 kw/batch prevents truncation. 214 keywords = 3 batches"
    },
    "broad_volume_agent": {
      "files": ["app/local_agents/scoring/subagents/broad_volume_agent.py"],
      "model": "gpt-4o-mini",
      "batch_size": 100,
      "max_tokens": 16000,
      "timeout": 240,
      "state": "active",
      "notes": "Adds root field to keywords. Batching enabled (100 items/batch) to prevent JSON corruption. 214 keywords = 3 batches. Fallback per batch on parse error."
    },
    "seo_analysis": {
      "files": [
        "app/local_agents/seo/runner.py",
        "app/local_agents/seo/helper_methods.py"
      ],
      "state": "active",
      "notes": "Advanced keyword matching (sub-phrase, plural, hyphen). Validation removed to preserve matched keywords. Null-safe search_volume check added."
    }
  },
  "debt": [],
  "env": {
    "OPENAI_API_KEY": "Required for all AI agents",
    "KEYWORD_BATCH_SIZE": "500 (for root extraction, separate from categorization batching)"
  }
}
